#!/bin/bash

## Copyright 2018 Jack Green (ja-green)
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.

## svc
## tool for managing running and testing HMRC VAT:VC microservices
##
## examples:
## run vat-summary-frontend on it's default port:
##     $ svc start vat-summary-frontend
##
## run view-vat-returns-frontend on port 1234:
##     $ svc start view-vat-returns-frontend -p 1234
##
## stop all running microservices:
##     $ svc stop -a
##
## list all microservices and their status:
##     $ svc list -a
##

die() {
  printf "${1}" "${2}" >&2

  exit 1
}

main() {
  argv=""; argc=${#}

  [[ ${argc} -eq 0 ]] && cmd="help"

  while [ -n "${1}" ]; do
    case "${1}" in
      --) shift; break ;;
      -*) case "${1}" in
      -v|--version)  [[ ${argc} -eq 1 ]] && cmd="version" || argv+="${1} " ;;
      -h|--help)     [[ ${argc} -eq 1 ]] && cmd="help"    || argv+="${1} " ;;
      -*)            argv+="${1} "
    esac ;;

       *) [ -z "${cmd}" ] && cmd="${1}" || argv+="${1} " ;;

    esac
    shift

  done

  if [ -f "/usr/lib/svc/svc-${cmd}" ]; then
    source "/usr/lib/svc/svc-${cmd}" "${argv}"
  elif type "svc-${cmd}" &>/dev/null; then
    source "svc-${cmd}" "${argv}"
  else
     die "fatal: '%s' is not an svc command.\
          \n\nsee 'svc help -a' for a list of all available commands\n" "${cmd}"
  fi
}

main "${@}"

exit ${?}

